// Code generated by go generate; DO NOT EDIT.
// Copyright 2021 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package dataplaneapi

import (
	"time"

	"github.com/docker/go-units"
	"github.com/go-openapi/runtime/flagext"

	"github.com/haproxytech/dataplaneapi/configuration"
	"github.com/haproxytech/dataplaneapi/misc"
)

func SyncWithFileSettings(server *Server, cfg *configuration.Configuration) {
	configStorage := cfg.GetStorageData()
{{- range $group := .Groups}}
{{- range .Attributes}}
{{- if eq $group.AttName "" }}
{{- if eq .StructName "Server" }}
	{{- if eq $group.Parent "" }}
		if configStorage.{{ $group.Name | Capitalize }} != nil && configStorage.{{ $group.Name | Capitalize }}.{{ .Name }} != nil && !misc.HasOSArg("{{ .Short }}", "{{ .Long }}", "{{ .ENV }}") {
		{{- if eq .Type "time.Duration" }}
			if d, err := time.ParseDuration(*configStorage.{{ $group.Name | Capitalize }}.{{ .Name }}); err != nil {
				server.{{ .Name }} = d
			}
		{{- else if eq .Type "flagext.ByteSize" }}
			s, err := units.FromHumanSize(*configStorage.{{ $group.Name | Capitalize }}.{{ .Name }})
			if err == nil {
				server.{{ .Name }} = flagext.ByteSize(s)
			}
		{{- else }}
			server.{{ .Name }} = *configStorage.{{ $group.Name | Capitalize }}.{{ .Name }}
		{{- end }}
	{{- else }}
		if configStorage.{{ $group.Parent | Capitalize }} != nil && configStorage.{{ $group.Parent | Capitalize }}.{{ $group.Name | Capitalize }} != nil && configStorage.{{ $group.Parent | Capitalize }}.{{ $group.Name | Capitalize }}.{{ .Name }} != nil && !misc.HasOSArg("{{ .Short }}", "{{ .Long }}", "{{ .ENV }}") {
		{{- if eq .Type "time.Duration" }}
			if d, err := time.ParseDuration(*configStorage.{{ $group.Parent | Capitalize }}.{{ $group.Name | Capitalize }}.{{ .Name }}); err != nil {
				server.{{ .Name }} = d
			}
		{{- else }}
			server.{{ .Name }} = *configStorage.{{ $group.Parent | Capitalize }}.{{ $group.Name | Capitalize }}.{{ .Name }}
		{{- end }}
	{{- end}}
	}
{{- end}}
{{- end}}
{{- end}}
{{- end}}
}
